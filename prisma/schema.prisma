// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(uuid())
  first_name String
  last_name  String
  phone      String @unique
  email      String @unique
  password   String
  address    String
  role       Role   @default(user)
  status     Status @default(active)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart Cart?

  @@map("users")
}

model Product {
  id         String @id @default(uuid())
  name       String
  price      Float
  quantity   Int
  brand_name String
  image      String
  features   Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId    String
  category      Product_Category    @relation(fields: [categoryId], references: [id])
  subcategoryId String
  subcategory   Product_Subcategory @relation(fields: [subcategoryId], references: [id])
  cart_items    Cart_Item[]

  @@map("products")
}

model Product_Category {
  id   String @id @default(uuid())
  name String

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Product_Subcategory Product_Subcategory[]
  products            Product[]

  @@map("categories")
}

model Product_Subcategory {
  id   String @id @default(uuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String
  category   Product_Category @relation(fields: [categoryId], references: [id])
  products   Product[]

  @@map("subcategories")
}

model Cart {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart_items Cart_Item[]

  @@map("carts")
}

model Cart_Item {
  id        String  @id @default(uuid())
  quantity  Int
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart_items")
}

enum Role {
  user
  admin
}

enum Status {
  active
  inactive
  disabled
}
